syntax = "proto3";
package v2ray.config;

// ########## google/protobuf/struct.proto ##########
enum NullValue
{
  NULL_VALUE = 0;
}

message ListValue
{
  // Repeated field of dynamically typed values.
  repeated Value values = 1;
}

message Struct
{
  // Unordered map of dynamically typed values.
  map<string, Value> fields = 1;
}

message Value
{
  // The kind of value.
  oneof kind
  {
    // Represents a null value.
    NullValue null_value = 1;
    // Represents a double value.
    double number_value = 2;
    // Represents a string value.
    string string_value = 3;
    // Represents a boolean value.
    bool bool_value = 4;
    // Represents a structured value.
    Struct struct_value = 5;
    // Represents a repeated `Value`.
    ListValue list_value = 6;
  }
}
// ########## google/protobuf/struct.proto ##########

enum Tags
{
  ACROSS_API = 0;
  HTTP_IN = 1;
  SOCKS5_IN = 2;
  ACROSS_API_INBOUND = 3;
  PROXY = 4;
}

message LogObject
{
  string error = 1;
  string access = 2;
  string loglevel = 3;
}

message APIObject
{
  enum ServiceType
  {
    ReflectionService = 0;
    HandlerService = 1;
    LoggerService = 2;
    StatsService = 3;
  }

  string tag = 1;
  repeated string services = 2;
}

message TrojanObject
{
  message ClientObject {
    string password =  1;
    string email = 2;
    int32 level = 3;
  }

  message FallbackObject {
    string alpn = 1;
    string path = 2;
    int64 dest = 3;
    int64 xver = 4;
  }

  message InboundConfigurationObject {
    repeated ClientObject clients = 1;
    repeated FallbackObject fallbacks = 2;
  }

  message ServerObject
  {
    string address = 1;
    uint32 port = 2;
    string password = 3;
    string email = 4;
    int32 level = 5;
  }

  message OutboundConfigurationObject { repeated ServerObject servers = 1; }
}

message ShadowsocksObject {
  message InboundConfigurationObject {
    string email = 1;
    string method = 2;
    string password = 3;
    int32 level = 4;
    string network = 5;
    bool ivCheck = 6;
  }

  message ServerObject {
    string email = 1;
    string address = 2;
    uint32 port = 3;
    string method = 4;
    string password = 5;
    int32 level = 6;
    bool ivCheck = 7;
  }

  message OutboundConfigurationObject {
    repeated ServerObject servers = 1;
  }
}

message VMESSObject {
  message ClientObject {
    string id = 1;
    int32 level = 2;
    int32 alterId = 3;
    string email = 4;
  }

  message DefaultObject {
    int32 level = 1;
    int32 alterId = 2;
  }

  message DetourObject {
    string to = 1;
  }

  message InboundConfigurationObject {
    repeated ClientObject clients = 1;
    DefaultObject default = 2;
    DetourObject detour = 3;
    bool disableInsecureEncryption = 4;
  }

  message UserObject {
    string id = 1;
    int32 alterId = 2;
    string security = 3;
    int32 level = 4;
  }

  message ServerObject {
    string address = 1;
    uint32 port = 2;
    repeated UserObject users = 3;
  }

  message OutboundConfigurationObject {
    repeated ServerObject vnext = 1;
  }
}

message DokodemoDoorObject {
  message InboundConfigurationObject {
    string address = 1;
    uint32 port = 2;
    string network = 3;
    int32 timeout = 4;
    bool followRedirect = 5;
    int32 userLevel = 6;
  }
}

message InboundConfigurationObject
{
  bool allowTransparent = 1;
  int32 timeout = 2;
  int32 userLevel = 3;
}

message InboundObject
{
  string listen = 1;
  uint32 port = 2;
  string protocol = 3;
  InboundConfigurationObject settings = 4;
  string tag = 5;
}

message OutboundConfigurationObject
{
  repeated Value settings = 1;
}

message TLSObject
{
  bool allowInsecure = 1;
  bool disableSystemRoot = 2;
  string serverName = 3;
}

message StreamSettingsObject
{
  string network = 1;
  string security = 2;
  TLSObject tlsSettings = 3;
}

message OutboundObject
{
  string send_throudh = 1;
  string protocol = 2;
  OutboundConfigurationObject settings = 3;
  StreamSettingsObject streamSettings = 4;
  string tag = 5;
}

message SystemPolicyObject
{
  bool statsInboundDownlink = 1;
  bool statsInboundUplink = 2;
  bool statsOutboundDownlink = 3;
  bool statsOutboundUplink = 4;
}

message PolicyObject
{
  SystemPolicyObject system = 1;
}

message RuleObject
{
  string domainMatcher = 1;
  string type = 2;
  repeated string domains = 3;
  repeated string ip = 4;
  string port = 5;
  string sourcePort = 6;
  string network = 7;
  repeated string source = 8;
  repeated string user = 9;
  repeated string inboundTag = 10;
  repeated string protocol = 11;
  string attrs = 12;
  string outboundTag = 13;
  string balancerTag = 14;
}

message StrategyObject
{
  string type = 1;
}

message BalancerObject
{
  string tag = 1;
  repeated string selector = 2;
  StrategyObject strategy = 3;
}

message RoutingObject
{
  string domainMatcher = 1;
  string domainStrategy = 2;
  repeated RuleObject rules = 3;
}

message StatsObject {}

message V2rayConfig
{
  LogObject log = 1;
  APIObject api = 2;
  repeated InboundObject inbounds = 3;
  repeated OutboundObject outbounds = 4;
  PolicyObject policy = 5;
  RoutingObject routing = 6;
  StatsObject stats = 7;
}
